schema {
  query: Query
  mutation: Mutation
  subscription: Subscription
}

type Query {
  getUsers(pagination: PaginationInput): [User]! @aws_lambda
}

type Mutation {
  addUser(input: UserInput!): User!
    @aws_api_key
    @aws_subscribe(mutations: ["addUser"])
  login(input: SessionInput!): Session! @aws_api_key
  loginByAD(input: SessionInputAD!): Session! @aws_api_key
}

type Subscription {
  onAddUser: User @aws_api_key @aws_subscribe(mutations: ["addUser"])
}

type User @aws_api_key @aws_lambda {
  id: String
  name: String
  email: String
  isActive: Boolean
  isAdmin: Boolean
  avatar: String
  questionlimitQuota: Int
  createdAt: AWSDateTime
  updatedAt: AWSDateTime
}

type Session @aws_api_key {
  token: String!
  user: User!
}

input UserInput {
  name: String!
  email: String!
  password: String!
}

input PaginationInput {
  page: Int = 1
  limit: Int = 10
}

input SessionInput {
  email: String!
  password: String!
}

input SessionInputAD {
  email: String!
  name: String!
}
